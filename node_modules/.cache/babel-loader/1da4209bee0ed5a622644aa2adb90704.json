{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/appReact/todolist/src/component/Todo.js\";\nimport React, { memo, useState } from 'react';\nconst Todo = memo(props => {\n  const {\n    todo,\n    markCompleted,\n    getEditTodo,\n    todoEditingId,\n    editTodo,\n    index,\n    removeTodo\n  } = props;\n  const isEditing = todoEditingId === todo.id;\n  const [text, setText] = useState(todo.text);\n\n  const onEditTodo = () => {\n    editTodo({ ...todo,\n      text\n    }, index);\n    getEditTodo('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: `${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, !isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: todo.isCompleted,\n    onChange: () => markCompleted(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    onDoubleClick: () => getEditTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: () => removeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onBlur: onEditTodo,\n    onKeyPress: e => {\n      if (e.key === 'Enter' && text) {\n        onEditTodo();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }));\n});\nexport default Todo;","map":{"version":3,"sources":["/Users/admin/Desktop/appReact/todolist/src/component/Todo.js"],"names":["React","memo","useState","Todo","props","todo","markCompleted","getEditTodo","todoEditingId","editTodo","index","removeTodo","isEditing","id","text","setText","onEditTodo","isCompleted","e","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,MAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,IAAI;AACvB,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,aAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,KANE;AAOFC,IAAAA;AAPE,MAQFP,KARJ;AASA,QAAMQ,SAAS,GAAGJ,aAAa,KAAKH,IAAI,CAACQ,EAAzC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACG,IAAI,CAACS,IAAN,CAAhC;;AACA,QAAME,UAAU,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAAC,EACL,GAAGJ,IADE;AAELS,MAAAA;AAFK,KAAD,EAGLJ,KAHK,CAAR;AAIAH,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAND;;AAQA,sBACI;AAAI,IAAA,SAAS,EAAG,GAAEK,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGP,IAAI,CAACY,WAAL,GAAmB,WAAnB,GAAiC,EAAG,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACL,SAAD,gBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,OAAO,EAAEP,IAAI,CAACY,WAHlB;AAII,IAAA,QAAQ,EAAE,MAAMX,aAAa,CAACD,IAAI,CAACQ,EAAN,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAO,IAAA,aAAa,EAAE,MAAMN,WAAW,CAACF,IAAI,CAACQ,EAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDR,IAAI,CAACS,IAAxD,CAPJ,eAQI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACN,IAAI,CAACQ,EAAN,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,gBAWI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAEC,IAFX;AAGI,IAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAII,IAAA,MAAM,EAAEJ,UAJZ;AAKI,IAAA,UAAU,EAAGE,CAAD,IAAO;AACf,UAAIA,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqBP,IAAzB,EAA+B;AAC3BE,QAAAA,UAAU;AACb;AACJ,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbZ,CADJ;AA4BH,CAhDgB,CAAjB;AAkDA,eAAeb,IAAf","sourcesContent":["import React, { memo, useState } from 'react'\n\nconst Todo = memo(props => {\n    const {\n        todo,\n        markCompleted,\n        getEditTodo,\n        todoEditingId,\n        editTodo,\n        index,\n        removeTodo\n    } = props\n    const isEditing = todoEditingId === todo.id\n    const [text, setText] = useState(todo.text)\n    const onEditTodo = () => {\n        editTodo({\n            ...todo,\n            text\n        }, index)\n        getEditTodo('')\n    }\n\n    return (\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\n            {\n                !isEditing ?\n                    <div className=\"view\">\n                        <input\n                            className=\"toggle\"\n                            type=\"checkbox\"\n                            checked={todo.isCompleted}\n                            onChange={() => markCompleted(todo.id)}\n                        />\n                        <label onDoubleClick={() => getEditTodo(todo.id)}>{todo.text}</label>\n                        <button className=\"destroy\" onClick={() => removeTodo(todo.id)} />\n                    </div> :\n                    <input\n                        className=\"edit\"\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        onBlur={onEditTodo}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter' && text) {\n                                onEditTodo()\n                            }\n                        }}\n                    />\n            }\n        </li>\n    )\n})\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}